{
  "name": "demo",
  "activities": [
    {
      "api": "/api/sampledata/WeatherForecasts",
      "method": "get",
      "mappings": [],
      "nextActivity": "weather-forcast",
      "name": "start",
      "type": "ApiActivity"
    },
    {
      "form": {
        "controls": [
          {
            "type": "paper-header",
            "label": "Weather Forcast",
            "name": "header",
            "placeholder": null,
            "validation": null
          },
          {
            "type": "paper-input",
            "label": "City",
            "name": "City",
            "placeholder": "EnterValue",
            "validation": ""
          },
          {
            "type": "paper-input",
            "label": "City 2",
            "name": "City 2",
            "placeholder": "EnterValue",
            "validation": ""
          },
          {
            "type": "nova-input",
            "label": "Tempreture",
            "name": "tempreture",
            "placeholder": "Please enter the tempreture",
            "validation": ""
          },
          {
            "type": "paper-button",
            "label": "Next Activity",
            "name": "nextActivity",
            "style": "btn btn-outline-danger",
            "nextActivity": "nextActivity"
          },
          {
            "type": "paper-button",
            "label": "Vehicle.Name",
            "name": "alertActivity",
            "style": "btn btn-outline-info",
            "nextActivity": "alertActivity"
          }
        ]
      },
      "name": "weather-forcast",
      "type": "FormActivity"
    },
    {
      "code": "\n              class Activity {                   \n                constructor(model, params, workflowService, notificationsService){\n                  this.model = model;\n                  this.params = params;\n                  this.wf = workflowService;\n                  this.notificationsService=notificationsService;\n                }\n                \n                execute() {\n                  this.notificationsService.success('Vehicle.Saved.Title', 'Vehicle.Saved.Message');\n                  this.wf.next('nextActivity');\n                }\n            }",
      "name": "alertActivity",
      "type": "CodeActivity"
    },
    {
      "form": {
        "controls": [
          {
            "type": "paper-header",
            "label": "Next Activity",
            "name": "header"
          },
          {
            "type": "paper-button",
            "label": "Weather Forcast",
            "name": "weatherForcast",
            "style": "btn btn-outline-primary",
            "nextActivity": "weather-forcast"
          },
          {
            "type": "paper-button",
            "label": "Form Activity",
            "name": "formActivity",
            "style": "btn btn-outline-info",
            "nextActivity": "form-activity"
          }
        ]
      },
      "name": "nextActivity",
      "type": "FormActivity"
    },
    {
      "form": {
        "controls": [
          {
            "type": "paper-header",
            "label": "Form View",
            "name": "header"
          },
          {
            "type": "paper-input",
            "label": "Name Label",
            "name": "name",
            "placeholder": "Please enter your name",
            "validation": ""
          },
          {
            "type": "magic-input",
            "label": "Middlename Label",
            "name": "middleName",
            "placeholder": "Please enter your middle name",
            "validation": ""
          },
          {
            "type": "paper-input",
            "label": "Surname Label",
            "name": "surname",
            "placeholder": "Please enter your surname",
            "validation": ""
          },
          {
            "type": "paper-password",
            "label": "Password Label",
            "name": "password",
            "placeholder": "Please enter your password",
            "validation": ""
          },
          {
            "type": "paper-button",
            "label": "Weather Forcast",
            "name": "weatherForcast",
            "style": "btn btn-outline-success",
            "nextActivity": "weather-forcast"
          },
          {
            "type": "paper-button",
            "label": "Next",
            "name": "nextActivity",
            "style": "btn btn-outline-danger",
            "nextActivity": "nextActivity"
          },
          {
            "type": "paper-button",
            "label": "Workflow",
            "name": "nextActivity",
            "style": "btn btn-outline-info",
            "nextActivity": "alertActivity2"
          }
        ]
      },
      "name": "form-activity",
      "type": "FormActivity"
    },
    {
      "code": "\n              class Activity {\n                constructor(model, params, workflowService, notificationsService){\n                  this.model = model;\n                  this.params = params;\n                  this.wf = workflowService;\n                  this.notificationsService=notificationsService;\n                }\n                \n                execute() {\n                  /*\n                  var el = document.querySelector('#address');\n                  el.style.backgroundColor = '#'+ Math.random().toString(16).substr(-6);\n                  el.style.color = '#'+ Math.random().toString(16).substr(-6);\n                  \n                  el.value = el.style.backgroundColor;\n                  \n                  alert(this.model.items[2].summary);\n                  \n                  \n                  var el = document.querySelector('#name');\n                  el.style.backgroundColor = '#'+ Math.random().toString(16).substr(-6);\n                  el.style.color = '#'+ Math.random().toString(16).substr(-6);\n                  el.value = el.style.backgroundColor;\n                  \n                  var el2 = document.querySelector('label[for=name]');\n                  el2.style.fontWeight = 900;\n                  el2.style.color = '#'+Math.random().toString(16).substr(-6);\n                  \n                  this.model.surname = 'Mare ' + (Math.floor(Math.random() * 100) + 1);\n                  */\n                  \n                  //window.location = 'http://localhost/demo/'\n                  //window.location = 'http://banking.mgsops.net/nova/'\n                    \n                }\n              }",
      "name": "alertActivity2",
      "type": "CodeActivity"
    },
    {
      "form": {
        "controls": [
          {
            "type": "paper-header",
            "label": "Errors.Title",
            "name": "header"
          }
        ]
      },
      "name": "error",
      "type": "FormActivity"
    }
  ]
}